import type { Metadata } from "next";
import localFont from "next/font/local";
import { headers } from "next/headers";

import { cookieToInitialState } from "wagmi";
import "@/styles/globals.css";
import MainNav from "@/components/layout/main-nav";
import Footer from "@/components/layout/footer";
import QueryContextProvider from "@/libs/contexts/query.context";
import WagmiProvider from "@/libs/contexts/wagmi.context";
import { getWagmiConfig } from "@/configs/web3/wagmi.config";
import XionProvider from "@/libs/contexts/xion.context";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout(
  {
    children,
  }: Readonly<{
    children: React.ReactNode;
  }>
) {
  const initialState = cookieToInitialState(
    getWagmiConfig(),
    (await headers()).get("cookie")
  );

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <XionProvider>
          <WagmiProvider initialState={initialState}>
            <QueryContextProvider>
              <MainNav />
              {children}
              <Footer />
            </QueryContextProvider>
          </WagmiProvider>
        </XionProvider>
      </body>
    </html>
  );
}
